[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "michelin-chatbot"
version = "1.0.0"
description = "AI-powered Michelin tire recommendation chatbot using RAG"
readme = "README.md"
requires-python = ">=3.9"
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: End Users/Desktop",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]
keywords = ["chatbot", "AI", "RAG", "michelin", "tires", "recommendation"]
authors = [
    {name = "Michelin Chatbot Team", email = "contact@example.com"}
]
maintainers = [
    {name = "Michelin Chatbot Team", email = "contact@example.com"}
]
dependencies = [
    "langchain>=0.2.0,<0.3.0",
    "langchain-openai>=0.1.0,<0.2.0",
    "langchain-community>=0.2.0,<0.3.0",
    "faiss-cpu>=1.8.0,<2.0.0",
    "streamlit>=1.35.0,<2.0.0",
    "openai>=1.30.0,<2.0.0",
    "pandas>=2.0.0,<3.0.0",
    "python-dotenv>=1.0.0,<2.0.0",
    "numpy>=1.24.0,<2.0.0",
    "loguru>=0.7.0,<1.0.0",
    "pydantic>=2.0.0,<3.0.0",
    "rich>=13.0.0,<14.0.0",
    "typer>=0.9.0,<1.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0,<8.0.0",
    "pytest-cov>=4.1.0,<5.0.0",
    "black>=23.0.0,<24.0.0",
    "flake8>=6.0.0,<7.0.0",
    "mypy>=1.5.0,<2.0.0",
    "pre-commit>=3.3.0,<4.0.0",
]

[project.urls]
Homepage = "https://github.com/michelin/chatbot"
Repository = "https://github.com/michelin/chatbot.git"
Documentation = "https://github.com/michelin/chatbot#readme"
"Bug Tracker" = "https://github.com/michelin/chatbot/issues"

[project.scripts]
michelin-chatbot = "src.main:main"

[tool.setuptools.packages.find]
where = ["src"]

[tool.black]
line-length = 88
target-version = ['py39', 'py310', 'py311', 'py312']
include = '\.pyi?$'
extend-exclude = '''
(
  /(
      \.eggs
    | \.git
    | \.hg
    | \.mypy_cache
    | \.tox
    | \.venv
    | _build
    | buck-out
    | build
    | dist
  )/
)
'''

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m "not slow"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[tool.coverage.run]
source = ["src"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\bProtocol\):",
    "@(abc\.)?abstractmethod",
]